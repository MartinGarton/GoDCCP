
[ R—loss ]
A missing data packet doesn't begin a new loss interval until NDUPACK packets have been seen
after the "hole", where NDUPACK = 3


[ R—feedback ]
MUST send feedback, if:


[ R—feedback—lossrate ]
A newly calculated loss event rate p is greater than its previous value


[ R—feedback—timer ]
The feedback timer expires and data packets have been received since the previous feedback was sent


[ R—feedback—timer-via-time ]
When the feedback timer expires, the receiver resets the timer to expire after R_m seconds, where
R_m is the most recent estimate of the round-trip time received from the sender.
¡
We suggest estimating the round-trip time from the most recent data packet. Note that this procedure
does not work when the inter-packet sending times are greater than the RTT.


[ R—feedback—timer-via-ccval ]
Whenever the receiver sends a feedback message, the receiver sets a local variable last_counter to
the greatest received value of the window counter since the last feedback message was sent, if any
data packets have been received since the last feedback message was sent.
¡
If the receiver receives a data packet with a window counter value greater than or equal to
last_counter + 4, then the receiver sends a new feedback packet.


[ R—feedback ]
An Elapsed Time and/or Timestamp Echo option specifying the amount of time elapsed since the arrival
at the receiver of the packet whose sequence number appears in the Acknowledgement Number field.
These options are described in [RFC4340], Section 13.
¡
A Receive Rate option, defined in Section 8.3, specifying the rate at which data was received since
the last DCCP-Ack was sent.
¡
A Loss Intervals option, defined in Section 8.6, specifying the most recent loss intervals
experienced by the receiver.  (The definition of a loss interval is provided below.)  From Loss
Intervals, the sender can easily calculate the loss event rate p using the procedure described in
[RFC3448], Section 5.4.


[ R—feedback-loss ]
The options MUST contain information about at least the most recent NINTERVAL + 1 = 9 loss intervals
unless (1) there have not yet been NINTERVAL + 1 loss intervals, or (2) the receiver knows, because
of the sender's acknowledgements, that some previously transmitted loss interval information has
been received.
¡
Loss interval sequence numbers are delta encoded starting from the Acknowledgement Number.
Therefore, Loss Intervals options MUST NOT be sent on packets without an Acknowledgement Number
¡
A loss interval begins with a lost or ECN-marked data packet; continues with at most one round-trip
time's worth of packets that may or may not be lost or marked; and completes with an arbitrarily
long series of non-dropped, non-marked data packets.
¡
A missing data packet doesn't begin a new loss interval until NDUPACK packets have been seen after
the "hole", where NDUPACK = 3.
!
Loss interval lengths should include data packets and should exclude the acknowledgement packets
from the reverse half-connection.
¡
The lossy and lossless lengths are measured in sequence numbers.  Together, they sum to the
interval's sequence length, which is the total number of packets the sender transmitted during the
interval.
¡
For all loss intervals except the first, the DATA LENGTH equals the sequence length minus the number
of non-data packets the sender transmitted during the loss interval, except that the minimum data
length is one packet.
¡
The first loss interval's data length is undefined until the first loss event.  Once the first loss
event has occurred; this calculation uses X_recv, the most recent receive rate, as input. Until this
first loss event, the loss event rate is zero, as is the data length reported for the interval in
the Loss Intervals option.
!
The first loss interval's data length might be less than, equal to, or even greater than its
sequence length.  Any other loss interval's data length must be less than or equal to its sequence
length.


[S–nofeedback—timer]
After a feedback packet is received, the sender sets a nofeedback timer to at least four times the
round- trip time estimate
¡
If the sender doesn't receive any feedback packets before the nofeedback timer expires, then the
sender halves its sending rate.





allowed sending rate 
	(-)  does not reduce below initial sending rate as a result of idle time
	(-) < 2*ReceiveRate reported by receiver
		(-) => after an application- limited period, the sender can at most double its sending rate from one
		    round-trip time to the next, until it reaches the allowed sending rate determined by the loss event
		    rate

sending rate, determined by loss event rate

packet size
	(-) MAY calculate s as the segment size averaged over multiple round trip times -- for example, over the
	    most recent four loss intervals
	(-) OR set to MSS

(DataDropped & SlowReceiver)

---

Maximum Segment Size (MSS) = the maximum size in bytes for the data segment, not including the
default DCCP and IP packet headers
