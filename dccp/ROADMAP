--- UNFINISHED

dccp.go			[]		Some global constants
timing.go		[]
congestion.go		[]

--- Generic DCCP header stuff

header.go		[DONE]		GenericHeader definition and RFC routines
header-util.go		[]		Header convenience routines
read.go			[DONE]		GenericHeader wire-format reader
write.go		[DONE]		GenericHeader wire-format writer
options.go		[DONE]		Option definition and RFC routines
servicecode.go		[DONE]		Service codes and their string representation

--- Connection logic

conn.go			[]		Main type for a DCCP connection/socket
socket.go		[]		Data-structure for DCCP socket variables
conn-inject.go		[]		Rate-limited packet injection
conn-read.go		[DONE]		Incoming packet read loop
conn-timewait.go	[DONE]		Response logic in TIMEWAIT state, Step 2
conn-listen.go		[]		Response logic in LISTEN state, Step 3
conn-respond.go		[]		Response logic in RESPOND state, Step 11

dial.go			[]
listener.go		[]
endlogic-loop.go	[]
endlogic.go		[]



--- Low-level encoding

checksum.go		[DONE]		Self-contained checksumming routines
wire.go			[DONE]		Wire representation of primitive types

--- Address types, link-layer and packet multiplexing

addr.go			[DONE]		A general-purpose address object for link-layer addresses
link.go			[DONE]		Interface for a general-purpose connection-less packet read/writer (link-layer)
mux.go			[DONE]		Multiplexing-layer that adds notion of flow on top of a link-layer	
muxmsg.go		[DONE]		Wire encodable/decodable header for multiplexing-layer messages
block.go		[DONE]		An interface for connections where data is read/written in indivisible blocks
flow.go			[DONE]		Part of the multiplexing-layer, implementation of the flow logic
udplink.go		[DONE]		Vanilla link-layer implementation on top of UDP

