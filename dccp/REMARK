

* introduce a readCongestionLoop and writeCongestionLoop to consume timeout and sync cc events
* CCID-inspired Reset and Reset-code separation b/w Sender/receiver

* Reliable transport
* test reliable transport (simulated drops)

* CCID3
* test CCID3 opts
* dynamically changing SWAF/SWBF

* Conn.SetReadTimeout

* add monitor-type output for the dccp stack

// TODO: In theory, long lived connections may wrap around the AckNo/SeqNo space
// in which case maxu64() should not be used below. This will never happen however
// if we are using 48-bit numbers exclusively

// TODO: Section 7.5.4
// To protect against denial-of-service attacks, DCCP implementations
// SHOULD impose a rate limit on DCCP-Syncs sent in response to
// sequence-invalid packets, such as not more than eight DCCP-Syncs per
// second.
